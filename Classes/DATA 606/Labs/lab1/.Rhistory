kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
## Quarterly Results {.tabset}
### By Product
(tab content)
## Quarterly Results {.tabset}
### By Product
#(tab content)
### By Region
#(tab content)
knitr::kable(head(movies))
movies <- dbReadTable(con, "movie")
movies <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
movies$view <- c(sprintf('<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'))
#knitr::include_graphics(movies[1,]$poster)
kable(movies,
col.names = linebreak(c("Movie", "Release Date", "Details", "Poster"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
movies <- dbReadTable(con, "movie")
movies <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
movies$view <- c(sprintf('<button title="Click to show answer" type="button">Show/hide</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'))
#knitr::include_graphics(movies[1,]$poster)
kable(movies,
col.names = linebreak(c("Movie", "Release Date", "Details", "Poster"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
movies <- dbReadTable(con, "movie")
movies <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
movies$view <- c(sprintf('![]<button title="Click to show answer" type="button">Show/hide</button>'),sprintf('![]<button>view</button>'),sprintf('![]<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'),sprintf('<button>view</button>'))
#knitr::include_graphics(movies[1,]$poster)
kable(movies,
col.names = linebreak(c("Movie", "Release Date", "Details", "Poster"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
movies <- dbReadTable(con, "movie")
movies <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
movies$view <- c(paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)")),paste0("[](<button>view details</button>)")
movies <- dbReadTable(con, "movie")
movies <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
movies$view <- c(paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)")
,paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)"))
#knitr::include_graphics(movies[1,]$poster)
kable(movies,
col.names = linebreak(c("Movie", "Release Date", "Details", "Poster"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
movies <- dbReadTable(con, "movie")
movies <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
movies$view <- c(paste0("[](<a>view details</a>)"),paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)")
,paste0("[](<button>view details</button>)"),paste0("[](<button>view details</button>)"))
#knitr::include_graphics(movies[1,]$poster)
kable(movies,
col.names = linebreak(c("Movie", "Release Date", "Details", "Poster"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
knitr::opts_chunk$set(echo = TRUE)
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
shinyApp(
ui <- fluidPage(
DT::dataTableOutput("data"),
textOutput('myText')
),
server <- function(input, output) {
myValue <- reactiveValues(employee = '')
shinyInput <- function(FUN, len, id, ...) {
inputs <- character(len)
for (i in seq_len(len)) {
inputs[i] <- as.character(FUN(paste0(id, i), ...))
}
inputs
}
df <- reactiveValues(data = data.frame(
Name = c('Dilbert', 'Alice', 'Wally', 'Ashok', 'Dogbert'),
Motivation = c(62, 73, 3, 99, 52),
Actions = shinyInput(actionButton, 5, 'button_', label = "Fire", onclick = 'Shiny.onInputChange(\"select_button\",  this.id)' ),
stringsAsFactors = FALSE,
row.names = 1:5
))
output$data <- DT::renderDataTable(
df$data, server = FALSE, escape = FALSE, selection = 'none'
)
observeEvent(input$select_button, {
selectedRow <- as.numeric(strsplit(input$select_button, "_")[[1]][2])
myValue$employee <<- paste('click on ',df$data[selectedRow,1])
})
output$myText <- renderText({
myValue$employee
})
}
)
shinyApp(
ui <- fluidPage(
DT::dataTableOutput("data"),
textOutput('myText')
),
server <- function(input, output) {
myValue <- reactiveValues(employee = '')
shinyInput <- function(FUN, len, id, ...) {
inputs <- character(len)
for (i in seq_len(len)) {
inputs[i] <- as.character(FUN(paste0(id, i), ...))
}
inputs
}
df <- reactiveValues(data = data.frame(
Name = c('Dilbert', 'Alice', 'Wally', 'Ashok', 'Dogbert'),
Motivation = c(62, 73, 3, 99, 52),
Actions = shinyInput(actionButton, 5, 'button_', label = "Fire", onclick = 'Shiny.onInputChange(\"select_button\",  this.id)' ),
stringsAsFactors = FALSE,
row.names = 1:5
))
output$data <- DT::renderDataTable(
df$data, server = FALSE, escape = FALSE, selection = 'none'
)
observeEvent(input$select_button, {
selectedRow <- as.numeric(strsplit(input$select_button, "_")[[1]][2])
myValue$employee <<- paste('click on ',df$data[selectedRow,1])
})
output$myText <- renderText({
myValue$employee
})
}
)
knitr::opts_chunk$set(echo = TRUE)
knitr::include_url()
knitr::opts_chunk$set(echo = TRUE)
include_app()
knitr::opts_chunk$set(echo = TRUE)
knitr::include_url('http://127.0.0.1:6182')
knitr::opts_chunk$set(echo = TRUE)
knitr::include_url("http://127.0.0.1:6182")
knitr::opts_chunk$set(echo = TRUE)
shinyApp(
ui <- fluidPage(
DT::dataTableOutput("data"),
textOutput('myText')
),
server <- function(input, output) {
myValue <- reactiveValues(employee = '')
shinyInput <- function(FUN, len, id, ...) {
inputs <- character(len)
for (i in seq_len(len)) {
inputs[i] <- as.character(FUN(paste0(id, i), ...))
}
inputs
}
df <- reactiveValues(data = data.frame(
Name = c('Dilbert', 'Alice', 'Wally', 'Ashok', 'Dogbert'),
Motivation = c(62, 73, 3, 99, 52),
Actions = shinyInput(actionButton, 5, 'button_', label = "Fire", onclick = 'Shiny.onInputChange(\"select_button\",  this.id)' ),
stringsAsFactors = FALSE,
row.names = 1:5
))
output$data <- DT::renderDataTable(
df$data, server = FALSE, escape = FALSE, selection = 'none'
)
observeEvent(input$select_button, {
selectedRow <- as.numeric(strsplit(input$select_button, "_")[[1]][2])
myValue$employee <<- paste('click on ',df$data[selectedRow,1])
})
output$myText <- renderText({
myValue$employee
})
}
)
knitr::opts_chunk$set(echo = TRUE)
#knitr::include_url("http://127.0.0.1:6182")
#include_app('http://127.0.0.1:6182')
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
#knitr::include_url("http://127.0.0.1:6182")
#include_app('http://127.0.0.1:6182')
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
#knitr::include_url("http://127.0.0.1:6182")
#include_app('http://127.0.0.1:6182')
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
#knitr::include_url("http://127.0.0.1:6182")
#include_app('http://127.0.0.1:6182')
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
con <- dbConnect(RMySQL::MySQL(), dbname="movies", host="127.0.0.1", port=3306, user="root", password="n9ugx12#2@!")
knitr::opts_chunk$set(echo = TRUE)
#knitr::include_url("http://127.0.0.1:6182")
#include_app('http://127.0.0.1:6182')
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
con <- dbConnect(RMySQL::MySQL(), dbname="movies", host="127.0.0.1", port=3306, user="root", password="n9ugx12#2@!")
shinyApp(
ui <- fluidPage(
DT::dataTableOutput("data"),
textOutput('myText')
),
server <- function(input, output) {
myValue <- reactiveValues(employee = '')
shinyInput <- function(FUN, len, id, ...) {
inputs <- character(len)
for (i in seq_len(len)) {
inputs[i] <- as.character(FUN(paste0(id, i), ...))
}
inputs
}
df <- reactiveValues(data = data.frame(
Name = c('Dilbert', 'Alice', 'Wally', 'Ashok', 'Dogbert'),
Motivation = c(62, 73, 3, 99, 52),
Actions = shinyInput(actionButton, 5, 'button_', label = "Fire", onclick = 'Shiny.onInputChange(\"select_button\",  this.id)' ),
stringsAsFactors = FALSE,
row.names = 1:5
))
output$data <- DT::renderDataTable(
df$data, server = FALSE, escape = FALSE, selection = 'none'
)
observeEvent(input$select_button, {
selectedRow <- as.numeric(strsplit(input$select_button, "_")[[1]][2])
myValue$employee <<- paste('click on ',df$data[selectedRow,1])
})
output$myText <- renderText({
myValue$employee
})
}
)
knitr::opts_chunk$set(echo = TRUE)
#knitr::include_url("http://127.0.0.1:6182")
#include_app('http://127.0.0.1:6182')
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
DT::renderDataTable({
DT::datatable(fullData, extensions = 'Buttons',
escape = FALSE,
rownames = FALSE,
options = list(dom = 'Bfrtip',
buttons =
list('colvis', list(
extend = 'collection',
buttons = list(list(extend='csv',
filename = 'hitStats'),
list(extend='excel',
filename = 'hitStats'),
list(extend='pdf',
filename= 'hitStats')),
text = 'Download'
)),
scrollX = TRUE,
pageLength = nrow(fullData),
order=list(list(2,'desc'))))
})
knitr::opts_chunk$set(echo = TRUE)
library(DBI)
require(shiny)
library(DT)
library(knitr)
library(kableExtra)
DT::renderDataTable({
DT::datatable(fullData, extensions = 'Buttons',
escape = FALSE,
rownames = FALSE,
options = list(dom = 'Bfrtip',
buttons =
list('colvis', list(
extend = 'collection',
buttons = list(list(extend='csv',
filename = 'hitStats'),
list(extend='excel',
filename = 'hitStats'),
list(extend='pdf',
filename= 'hitStats')),
text = 'Download'
)),
scrollX = TRUE,
pageLength = nrow(movies),
order=list(list(2,'desc'))))
})
DT::renderDataTable({
DT::datatable(movies, extensions = 'Buttons',
escape = FALSE,
rownames = FALSE,
options = list(dom = 'Bfrtip',
buttons =
list('colvis', list(
extend = 'collection',
buttons = list(list(extend='csv',
filename = 'hitStats'),
list(extend='excel',
filename = 'hitStats'),
list(extend='pdf',
filename= 'hitStats')),
text = 'Download'
)),
scrollX = TRUE,
pageLength = nrow(movies),
order=list(list(2,'desc'))))
})
movies <- dbReadTable(con, "movie")
movies
mv <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
knitr::opts_chunk$set(echo = TRUE)
library(DBI)
library(knitr)
library(kableExtra)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(DBI)
library(knitr)
library(kableExtra)
# Chunk 2
con <- dbConnect(RMySQL::MySQL(), dbname="movies", host="127.0.0.1", port=3306, user="root", password="n9ugx12#2@!")
# Chunk 3
dbListTables(con)
# Chunk 4
movies <- dbReadTable(con, "movie")
movies
mv <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
# Chunk 5
#knitr::include_graphics(movies[1,]$poster)
kable(mv,
col.names = linebreak(c("Movie", "Release Date", "Details"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
# Chunk 6
knitr::include_graphics(movies[1,]$poster)
# Chunk 7
knitr::include_graphics(movies[2,]$poster)
knitr::include_graphics(movies[1,]$poster)
knitr::include_graphics(movies[2,]$poster)
knitr::include_graphics(movies[1,]$poster)
knitr::include_graphics(movies[2,]$poster)
#knitr::include_graphics(movies[1,]$poster)
kable(mv,
col.names = linebreak(c("Movie", "Release Date", "Details"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
knitr::include_graphics(movies[6,]$poster)
movies[6,]$title
movies[6,]$releasedate
movies[6,]$details
movies[6,]$summary
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(DBI)
library(knitr)
library(kableExtra)
# Chunk 2
con <- dbConnect(RMySQL::MySQL(), dbname="movies", host="127.0.0.1", port=3306, user="root", password="n9ugx12#2@!")
# Chunk 3
dbListTables(con)
# Chunk 4
movies <- dbReadTable(con, "movie")
mv <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
# Chunk 5
#knitr::include_graphics(movies[1,]$poster)
kable(mv,
col.names = linebreak(c("Movie", "Release Date", "Details"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
# Chunk 6
knitr::include_graphics(movies[1,]$poster)
movies[1,]$title
movies[1,]$releasedate
movies[1,]$details
movies[1,]$summary
# Chunk 7
knitr::include_graphics(movies[2,]$poster)
movies[2,]$title
movies[2,]$releasedate
movies[2,]$details
movies[2,]$summary
# Chunk 8
knitr::include_graphics(movies[3,]$poster)
movies[3,]$title
movies[3,]$releasedate
movies[3,]$details
movies[3,]$summary
# Chunk 9
knitr::include_graphics(movies[4,]$poster)
movies[4,]$title
movies[4,]$releasedate
movies[4,]$details
movies[4,]$summary
# Chunk 10
knitr::include_graphics(movies[5,]$poster)
movies[5,]$title
movies[5,]$releasedate
movies[5,]$details
movies[5,]$summary
# Chunk 11
knitr::include_graphics(movies[6,]$poster)
movies[6,]$title
movies[6,]$releasedate
movies[6,]$details
movies[6,]$summary
knitr::include_graphics(movies[3,]$poster)
cat("Title", movies[3,]$title, sep = '\n')
cat("Release Date", movies[3,]$releasedate, sep = '\n')
cat("Details", movies[3,]$details, sep = '\n')
cat("Summary", movies[3,]$summary, sep = '\n')
knitr::include_graphics(movies[4,]$poster)
cat("Title", movies[4,]$title, sep = '\n')
cat("Release Date", movies[4,]$releasedate, sep = '\n')
cat("Details", movies[4,]$details, sep = '\n')
cat("Summary", movies[4,]$summary, sep = '\n')
knitr::include_graphics(movies[5,]$poster)
cat("Title", movies[5,]$title, sep = '\n')
cat("Release Date", movies[5,]$releasedate, sep = '\n')
cat("Details", movies[5,]$details, sep = '\n')
cat("Summary", movies[5,]$summary, sep = '\n')
knitr::include_graphics(movies[6,]$poster)
cat("Title: ", movies[6,]$title, sep = '\n')
cat("Release Date: ", movies[6,]$releasedate, sep = '\n')
cat("Details", movies[6,]$details, sep = '\n')
cat("Summary", movies[6,]$summary, sep = '\n')
knitr::include_graphics(movies[2,]$poster)
cat("Title", movies[2,]$title, sep = '\n')
cat("Release Date", movies[2,]$releasedate, sep = '\n')
cat("Details", movies[2,]$details, sep = '\n')
cat("Summary", movies[2,]$summary, sep = '\n')
knitr::include_graphics(movies[1,]$poster)
cat("Title", movies[1,]$title, sep = '\n')
cat("Release Date", movies[1,]$releasedate, sep = '\n')
cat("Details", movies[1,]$details, sep = '\n')
cat("Summary", movies[1,]$summary, sep = '\n')
#knitr::include_graphics(movies[1,]$poster)
kable(mv,
col.names = linebreak(c("Movie", "Release Date", "Details"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
movies <- dbReadTable(con, "movie")
mv <- data.frame(c(movies$title), c(movies$releasedate), c(movies$details))
#knitr::include_graphics(movies[1,]$poster)
kable(mv,
col.names = linebreak(c("Movie", "Release Date", "Details"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
knitr::include_graphics(movies[1,]$poster)
cat("Title", movies[1,]$title, sep = '\n')
cat("Release Date", movies[1,]$releasedate, sep = '\n')
cat("Details", movies[1,]$details, sep = '\n')
cat("Summary", movies[1,]$summary, sep = '\n')
#knitr::include_graphics(movies[1,]$poster)
kable(mv,
col.names = linebreak(c("Movie", "Release Date", "Details"), align = "c")) %>%
kable_styling("striped", full_width = T) %>%
column_spec(1:3, bold = T, color = "#000") %>%
row_spec(1:6, bold = T, color = "#000")
knitr::include_graphics(movies[2,]$poster)
cat("Title", movies[2,]$title, sep = '\n')
cat("Release Date", movies[2,]$releasedate, sep = '\n')
cat("Details", movies[2,]$details, sep = '\n')
cat("Summary", movies[2,]$summary, sep = '\n')
knitr::include_graphics(movies[3,]$poster)
cat("Title", movies[3,]$title, sep = '\n')
cat("Release Date", movies[3,]$releasedate, sep = '\n')
cat("Details", movies[3,]$details, sep = '\n')
cat("Summary", movies[3,]$summary, sep = '\n')
knitr::include_graphics(movies[4,]$poster)
cat("Title", movies[4,]$title, sep = '\n')
cat("Release Date", movies[4,]$releasedate, sep = '\n')
cat("Details", movies[4,]$details, sep = '\n')
cat("Summary", movies[4,]$summary, sep = '\n')
knitr::include_graphics(movies[5,]$poster)
cat("Title", movies[5,]$title, sep = '\n')
cat("Release Date", movies[5,]$releasedate, sep = '\n')
cat("Details", movies[5,]$details, sep = '\n')
cat("Summary", movies[5,]$summary, sep = '\n')
knitr::include_graphics(movies[6,]$poster)
cat("Title: ", movies[6,]$title, sep = '\n')
cat("Release Date: ", movies[6,]$releasedate, sep = '\n')
cat("Details", movies[6,]$details, sep = '\n')
cat("Summary", movies[6,]$summary, sep = '\n')
